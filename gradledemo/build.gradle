apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.example.gradledemo"
        minSdkVersion 17
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }
    packagingOptions {
        // 两个包里面的文件重复了还是怎么的
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    dexOptions { javaMaxHeapSize "8g" }
    signingConfigs {
        debug {
            storeFile file("release.jks")
            storePassword "key@milton"
            keyAlias "androidbase"
            keyPassword "key@milton"
        }
        relealse {
            storeFile file("release.jks")
            storePassword "key@milton"
            keyAlias "androidbase"
            keyPassword "key@milton"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "String", "API_URL", "\"http://debug.example.com/api\""
            resValue "string", "app_name2", "DEBUG"
            resValue "string", "title22", "Title debug"
//            versionNameSuffix "-debugaaa"
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }

        release {
            applicationIdSuffix ".release"
            versionNameSuffix "-release"
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "String", "API_URL", "\"http://release.example.com/api\""
            resValue "string", "app_name2", "release"
            resValue "string", "title22", "Title release"
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            proguardFiles 'proguard-android.txt', 'proguard-rules.pro'
            //签名
            signingConfig signingConfigs.relealse
//            debuggable false
//            jniDebuggable false
//            pseudoLocalesEnabled true
//            renderscriptDebuggable true
        }
//        staging.initWith(buildTypes.debug)
//        staging {
//            applicationIdSuffix ".staging"
//            versionNameSuffix "-staging"
//            resValue "string", "app_name2", "staging"
//            resValue "string", "title22", "Title staging"
//            buildConfigField "String", "API_URL", "\"http://staging.example.com/api\""
//            debuggable = false
//        }
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
//                    output.outputFile.parent,
//                    "xxxx(apk的名字)-${variant.buildType.name}-${defaultConfig.versionName}-${variant.productFlavors[0].name}.apk".toLowerCase())
                    "gradledemo-${variant.buildType.name}-${defaultConfig.versionName}-${variant.productFlavors[0].name}-${variant.productFlavors[1].name}-${getDate()}.apk".toLowerCase())
        }

    }


    flavorDimensions "channel", "price"
    productFlavors {

//        wandoujia {
//            flavorDimension "channel"
//        }
//        baidu {
//            flavorDimension "channel"
//        }
//        c360 {
//            flavorDimension "channel"
//        }
        uc {
            flavorDimension "channel"
        }

        free {
            flavorDimension "price"
        }
//        paid {
//            flavorDimension "price"
//        }
        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }

    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
//            manifest.srcFile 'AndroidManifest.xml'
//            java.srcDirs = ['src']
//            resources.srcDirs = ['src']
//            aidl.srcDirs = ['src']
//            renderscript.srcDirs = ['src']
//            res.srcDirs = ['res']
//            assets.srcDirs = ['assets']
        }
    }
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:24.2.0'
    //    compile project(':library')
    //    compile fileTree('libs')
    //    compile files('libs/domoarigato.jar')
    //    compile 'com.google.code.gson:gson:2.4'
    //    compile group: 'com.google.code.gson', name: 'gson', version:'2.4'
    compile(name: 'library-release', ext: 'aar')
}
repositories {
    flatDir {
        dirs 'aars'
    }
}

//获取时间戳
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

//从androidManifest.xml中获取版本号
def getVersionNameFromManifest() {
    def manifestParser = new com.android.builder.core.DefaultManifestParser()
    return manifestParser.getVersionName(android.sourceSets.main.manifest.srcFile)
}